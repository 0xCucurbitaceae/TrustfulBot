export const TrustfulResolverABI = [
  {
    type: 'constructor',
    inputs: [{ name: 'eas', type: 'address', internalType: 'contract IEAS' }],
    stateMutability: 'nonpayable',
  },
  { type: 'receive', stateMutability: 'payable' },
  {
    type: 'function',
    name: 'DEFAULT_ADMIN_ROLE',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'MANAGER_ROLE',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'ROOT_ROLE',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'VILLAGER_ROLE',
    inputs: [],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'allowedAttestationTitles',
    inputs: [{ name: 'title', type: 'string', internalType: 'string' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'allowedSchemas',
    inputs: [{ name: 'uid', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [
      { name: '', type: 'uint8', internalType: 'enum IResolver.Action' },
    ],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'attest',
    inputs: [
      {
        name: 'attestation',
        type: 'tuple',
        internalType: 'struct Attestation',
        components: [
          { name: 'uid', type: 'bytes32', internalType: 'bytes32' },
          { name: 'schema', type: 'bytes32', internalType: 'bytes32' },
          { name: 'time', type: 'uint64', internalType: 'uint64' },
          { name: 'expirationTime', type: 'uint64', internalType: 'uint64' },
          { name: 'revocationTime', type: 'uint64', internalType: 'uint64' },
          { name: 'refUID', type: 'bytes32', internalType: 'bytes32' },
          { name: 'recipient', type: 'address', internalType: 'address' },
          { name: 'attester', type: 'address', internalType: 'address' },
          { name: 'revocable', type: 'bool', internalType: 'bool' },
          { name: 'data', type: 'bytes', internalType: 'bytes' },
        ],
      },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'cannotReply',
    inputs: [{ name: 'uid', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getAllAttestationTitles',
    inputs: [],
    outputs: [{ name: '', type: 'string[]', internalType: 'string[]' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'getRoleAdmin',
    inputs: [{ name: 'role', type: 'bytes32', internalType: 'bytes32' }],
    outputs: [{ name: '', type: 'bytes32', internalType: 'bytes32' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'grantRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'hasRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'function',
    name: 'isPayable',
    inputs: [],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'pure',
  },
  {
    type: 'function',
    name: 'renounceRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'callerConfirmation', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'revoke',
    inputs: [
      {
        name: 'attestation',
        type: 'tuple',
        internalType: 'struct Attestation',
        components: [
          { name: 'uid', type: 'bytes32', internalType: 'bytes32' },
          { name: 'schema', type: 'bytes32', internalType: 'bytes32' },
          { name: 'time', type: 'uint64', internalType: 'uint64' },
          { name: 'expirationTime', type: 'uint64', internalType: 'uint64' },
          { name: 'revocationTime', type: 'uint64', internalType: 'uint64' },
          { name: 'refUID', type: 'bytes32', internalType: 'bytes32' },
          { name: 'recipient', type: 'address', internalType: 'address' },
          { name: 'attester', type: 'address', internalType: 'address' },
          { name: 'revocable', type: 'bool', internalType: 'bool' },
          { name: 'data', type: 'bytes', internalType: 'bytes' },
        ],
      },
    ],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'payable',
  },
  {
    type: 'function',
    name: 'revokeRole',
    inputs: [
      { name: 'role', type: 'bytes32', internalType: 'bytes32' },
      { name: 'account', type: 'address', internalType: 'address' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setAttestationTitle',
    inputs: [
      { name: 'title', type: 'string', internalType: 'string' },
      { name: 'isValid', type: 'bool', internalType: 'bool' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'setSchema',
    inputs: [
      { name: 'uid', type: 'bytes32', internalType: 'bytes32' },
      { name: 'action', type: 'uint256', internalType: 'uint256' },
    ],
    outputs: [],
    stateMutability: 'nonpayable',
  },
  {
    type: 'function',
    name: 'supportsInterface',
    inputs: [{ name: 'interfaceId', type: 'bytes4', internalType: 'bytes4' }],
    outputs: [{ name: '', type: 'bool', internalType: 'bool' }],
    stateMutability: 'view',
  },
  {
    type: 'event',
    name: 'RoleAdminChanged',
    inputs: [
      { name: 'role', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: 'previousAdminRole',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
      {
        name: 'newAdminRole',
        type: 'bytes32',
        indexed: true,
        internalType: 'bytes32',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleGranted',
    inputs: [
      { name: 'role', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: 'account',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'sender',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleRevoked',
    inputs: [
      { name: 'role', type: 'bytes32', indexed: true, internalType: 'bytes32' },
      {
        name: 'account',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
      {
        name: 'sender',
        type: 'address',
        indexed: true,
        internalType: 'address',
      },
    ],
    anonymous: false,
  },
  { type: 'error', name: 'AccessControlBadConfirmation', inputs: [] },
  {
    type: 'error',
    name: 'AccessControlUnauthorizedAccount',
    inputs: [
      { name: 'account', type: 'address', internalType: 'address' },
      { name: 'neededRole', type: 'bytes32', internalType: 'bytes32' },
    ],
  },
  { type: 'error', name: 'AccessDenied', inputs: [] },
  { type: 'error', name: 'AlreadyHasResponse', inputs: [] },
  { type: 'error', name: 'InvalidAttestationTitle', inputs: [] },
  { type: 'error', name: 'InvalidEAS', inputs: [] },
  { type: 'error', name: 'InvalidExpiration', inputs: [] },
  { type: 'error', name: 'InvalidRefUID', inputs: [] },
  { type: 'error', name: 'InvalidRevocability', inputs: [] },
  { type: 'error', name: 'InvalidRole', inputs: [] },
  { type: 'error', name: 'NotPayable', inputs: [] },
];
